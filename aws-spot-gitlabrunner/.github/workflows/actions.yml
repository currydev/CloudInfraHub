name: Terraform CI/CD

on:
  push:
    branches:
      - main # Assuming 'main' is your default branch, adjust if necessary
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.yml'
      - '**.yaml'

jobs:
  validate:
    name: Validate Terraform configurations
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Terraform
        run: |
          terraform init
          terraform validate

  plan:
    name: Plan Terraform changes
    runs-on: ubuntu-latest
    needs: validate
    container:
      image: hashicorp/terraform:1.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Terraform Plan
        run: |
          terraform init
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json
          terraform show -no-color tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Upload tfplan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tfplan.json

  apply:
    name: Apply Terraform changes
    runs-on: ubuntu-latest
    needs: plan
    container:
      image: hashicorp/terraform:1.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Terraform Apply
        run: |
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  cleanup:
    name: Cleanup Resources
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Adjust if your default branch is different
    container:
      image: hashicorp/terraform:1.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Destroy
        run: |
          terraform init
          terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
